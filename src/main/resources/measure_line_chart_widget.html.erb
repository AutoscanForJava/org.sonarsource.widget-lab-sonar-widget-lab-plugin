<style>
path {
  stroke: steelblue;
  stroke-width: 2;
  fill: none;
}
.axis path,
.axis line {
  fill: none;
  stroke: grey;
  stroke-width: 1;
  shape-rendering: crispEdges;
}
</style>

<%
  containerId = 'measure_bar_chart' + widget.id.to_s

  if has_role?(:user, @project)
    metric=widget_properties["metric"]
    measure = measure(metric)

    if metric 
%>

<span class="widget-label"><%= measure.metric.short_name -%></span>

<div class="histogram-widget" id="<%= containerId %>">
  <!--[if lte IE 8 ]> <h3><%= message('widget.unsupported_browser_warning') -%></h3> <![endif]-->
</div>

<!--[if (gte IE 9)|!(IE)]><!-->
<script>
  var data<%= widget.id.to_s %> = [];

  (function () {

    var $ = jQuery;

    var metric = '<%= measure.metric.key -%>';

    var todayLess1Year = new Date();
    todayLess1Year.setDate(todayLess1Year.getDate()-365);

    var queryParams = [
          'resource=<%= @project.id() -%>',
          'metrics=' + metric,
          'fromDateTime=' + todayLess1Year.toISOString()
        ];
    var query = queryParams.join('&');
    var url = baseUrl + '/api/timemachine/index?' + query

    $.get(url, function(r) {
      r[0].cells.forEach(function (cell) {
        var p = {date: new Date(cell.d), value: cell.v[0]};
        data<%= widget.id.to_s %>.push(p);
      });

      var filteredData<%= widget.id.to_s %> = [];

      var previousP = null;
      for (i = 0; i < data<%= widget.id.to_s %>.length; i++) { 
        var currentP = data<%= widget.id.to_s %>[i];
        if (previousP != null) {
          if (currentP.date.getMonth() > previousP.date.getMonth()) {
            filteredData<%= widget.id.to_s %>.push(previousP);
            previousP = currentP;
          }
        } else {
          previousP = currentP;
        }
        if ( i == (data<%= widget.id.to_s %>.length - 1)) {
          filteredData<%= widget.id.to_s %>.push(currentP);
        }
      }
      data<%= widget.id.to_s %> = filteredData<%= widget.id.to_s %>;

      // Set the dimensions of the canvas / graph
      var margin = {top: 20, right: 20, bottom: 70, left: 80},
          width = d3.select("#<%= containerId %>").property('offsetWidth') - margin.left - margin.right,
          height = 270 - margin.top - margin.bottom;

      // Set the ranges
      var x = d3.time.scale().range([0, width]);
      var y = d3.scale.linear().range([height, 0]);

      // Define the axes
      var xAxis = d3.svg.axis()
          .scale(x)
          .orient("bottom")
          .tickFormat(d3.time.format("%Y-%m"));

      var yAxis = d3.svg.axis()
          .scale(y)
          .orient("left")
          .ticks(10);

      // Define the line
      var valueline = d3.svg.line()
          .x(function(d) { return x(d.date); })
          .y(function(d) { return y(d.value); });
          
      // Adds the svg canvas
      var svg = d3.select("#<%= containerId %>")
          .append("svg")
              .attr("width", width + margin.left + margin.right)
              .attr("height", height + margin.top + margin.bottom)
          .append("g")
              .attr("transform", 
                    "translate(" + margin.left + "," + margin.top + ")");

          // Scale the range of the data
          x.domain(d3.extent(data<%= widget.id.to_s %>, function(d) { return d.date; }));
          y.domain([0, d3.max(data<%= widget.id.to_s %>, function(d) { return d.value; })]);

          // Add the valueline path.
          svg.append("path")
              .attr("class", "line")
              .attr("d", valueline(data<%= widget.id.to_s %>));

          // Add the X Axis
          svg.append("g")
              .attr("class", "x axis")
              .attr("transform", "translate(0," + height + ")")
              .call(xAxis)
              .selectAll("text")
              .style("text-anchor", "end")
              .attr("dx", "-.8em")
              .attr("dy", "-.55em")
              .attr("transform", "rotate(-90)" );

          // Add the Y Axis
          svg.append("g")
              .attr("class", "y axis")
              .call(yAxis)
              .append("text")
              .attr("transform", "rotate(-90)")
              .attr("y", 6)
              .attr("dy", ".71em")
              .style("text-anchor", "end")
              .text("<%= measure.metric.short_name -%>");              

    });

  })();



</script>

<!--[if (gte IE 9)|!(IE)]><!-->
  <table class="spacedicon" style="width: 100%;"  id="<%= containerId %>-table">

  </table>

  <% else %>
  Please configure the widget to have the Measure Bar Chart working.
  <% end %>
<!--<![endif]-->
<% end %>

